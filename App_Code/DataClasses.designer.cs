#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GoLiveDatabase")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertDomainTable(DomainTable instance);
  partial void UpdateDomainTable(DomainTable instance);
  partial void DeleteDomainTable(DomainTable instance);
  partial void InsertSpaceTable(SpaceTable instance);
  partial void UpdateSpaceTable(SpaceTable instance);
  partial void DeleteSpaceTable(SpaceTable instance);
  partial void InsertLoginTable(LoginTable instance);
  partial void UpdateLoginTable(LoginTable instance);
  partial void DeleteLoginTable(LoginTable instance);
  partial void InsertProfileTable(ProfileTable instance);
  partial void UpdateProfileTable(ProfileTable instance);
  partial void DeleteProfileTable(ProfileTable instance);
  partial void InsertVendorProfileTable(VendorProfileTable instance);
  partial void UpdateVendorProfileTable(VendorProfileTable instance);
  partial void DeleteVendorProfileTable(VendorProfileTable instance);
  partial void InsertFeedBackTable(FeedBackTable instance);
  partial void UpdateFeedBackTable(FeedBackTable instance);
  partial void DeleteFeedBackTable(FeedBackTable instance);
  partial void InsertHostingPlansTable(HostingPlansTable instance);
  partial void UpdateHostingPlansTable(HostingPlansTable instance);
  partial void DeleteHostingPlansTable(HostingPlansTable instance);
  partial void InsertHostDomainsTable(HostDomainsTable instance);
  partial void UpdateHostDomainsTable(HostDomainsTable instance);
  partial void DeleteHostDomainsTable(HostDomainsTable instance);
  partial void InsertRateReviewTable(RateReviewTable instance);
  partial void UpdateRateReviewTable(RateReviewTable instance);
  partial void DeleteRateReviewTable(RateReviewTable instance);
  partial void InsertVendorWebsiteTable(VendorWebsiteTable instance);
  partial void UpdateVendorWebsiteTable(VendorWebsiteTable instance);
  partial void DeleteVendorWebsiteTable(VendorWebsiteTable instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GoLiveDatabaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<DomainTable> DomainTables
	{
		get
		{
			return this.GetTable<DomainTable>();
		}
	}
	
	public System.Data.Linq.Table<SpaceTable> SpaceTables
	{
		get
		{
			return this.GetTable<SpaceTable>();
		}
	}
	
	public System.Data.Linq.Table<LoginTable> LoginTables
	{
		get
		{
			return this.GetTable<LoginTable>();
		}
	}
	
	public System.Data.Linq.Table<ProfileTable> ProfileTables
	{
		get
		{
			return this.GetTable<ProfileTable>();
		}
	}
	
	public System.Data.Linq.Table<VendorProfileTable> VendorProfileTables
	{
		get
		{
			return this.GetTable<VendorProfileTable>();
		}
	}
	
	public System.Data.Linq.Table<FeedBackTable> FeedBackTables
	{
		get
		{
			return this.GetTable<FeedBackTable>();
		}
	}
	
	public System.Data.Linq.Table<HostingPlansTable> HostingPlansTables
	{
		get
		{
			return this.GetTable<HostingPlansTable>();
		}
	}
	
	public System.Data.Linq.Table<HostDomainsTable> HostDomainsTables
	{
		get
		{
			return this.GetTable<HostDomainsTable>();
		}
	}
	
	public System.Data.Linq.Table<RateReviewTable> RateReviewTables
	{
		get
		{
			return this.GetTable<RateReviewTable>();
		}
	}
	
	public System.Data.Linq.Table<VendorWebsiteTable> VendorWebsiteTables
	{
		get
		{
			return this.GetTable<VendorWebsiteTable>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DomainTable")]
public partial class DomainTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _DomainNames;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDomainNamesChanging(string value);
    partial void OnDomainNamesChanged();
    #endregion
	
	public DomainTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainNames", DbType="VarChar(MAX)")]
	public string DomainNames
	{
		get
		{
			return this._DomainNames;
		}
		set
		{
			if ((this._DomainNames != value))
			{
				this.OnDomainNamesChanging(value);
				this.SendPropertyChanging();
				this._DomainNames = value;
				this.SendPropertyChanged("DomainNames");
				this.OnDomainNamesChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpaceTable")]
public partial class SpaceTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _SpaceProvided;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSpaceProvidedChanging(string value);
    partial void OnSpaceProvidedChanged();
    #endregion
	
	public SpaceTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceProvided", DbType="VarChar(MAX)")]
	public string SpaceProvided
	{
		get
		{
			return this._SpaceProvided;
		}
		set
		{
			if ((this._SpaceProvided != value))
			{
				this.OnSpaceProvidedChanging(value);
				this.SendPropertyChanging();
				this._SpaceProvided = value;
				this.SendPropertyChanged("SpaceProvided");
				this.OnSpaceProvidedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginTable")]
public partial class LoginTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _UserName;
	
	private string _Password;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
	
	public LoginTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(MAX)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfileTable")]
public partial class ProfileTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _UserName;
	
	private string _FullName;
	
	private string _E_mail;
	
	private string _Password;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnE_mailChanging(string value);
    partial void OnE_mailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
	
	public ProfileTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(MAX)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(MAX)")]
	public string FullName
	{
		get
		{
			return this._FullName;
		}
		set
		{
			if ((this._FullName != value))
			{
				this.OnFullNameChanging(value);
				this.SendPropertyChanging();
				this._FullName = value;
				this.SendPropertyChanged("FullName");
				this.OnFullNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_mail", DbType="VarChar(MAX)")]
	public string E_mail
	{
		get
		{
			return this._E_mail;
		}
		set
		{
			if ((this._E_mail != value))
			{
				this.OnE_mailChanging(value);
				this.SendPropertyChanging();
				this._E_mail = value;
				this.SendPropertyChanged("E_mail");
				this.OnE_mailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VendorProfileTable")]
public partial class VendorProfileTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _UserName;
	
	private string _VendorName;
	
	private string _E_mail;
	
	private string _Password;
	
	private string _Logo;
	
	private string _LogoPath;
	
	private string _Status;
	
	private EntitySet<HostingPlansTable> _HostingPlansTables;
	
	private EntitySet<HostDomainsTable> _HostDomainsTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnVendorNameChanging(string value);
    partial void OnVendorNameChanged();
    partial void OnE_mailChanging(string value);
    partial void OnE_mailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    partial void OnLogoPathChanging(string value);
    partial void OnLogoPathChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
	
	public VendorProfileTable()
	{
		this._HostingPlansTables = new EntitySet<HostingPlansTable>(new Action<HostingPlansTable>(this.attach_HostingPlansTables), new Action<HostingPlansTable>(this.detach_HostingPlansTables));
		this._HostDomainsTables = new EntitySet<HostDomainsTable>(new Action<HostDomainsTable>(this.attach_HostDomainsTables), new Action<HostDomainsTable>(this.detach_HostDomainsTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(MAX)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="VarChar(MAX)")]
	public string VendorName
	{
		get
		{
			return this._VendorName;
		}
		set
		{
			if ((this._VendorName != value))
			{
				this.OnVendorNameChanging(value);
				this.SendPropertyChanging();
				this._VendorName = value;
				this.SendPropertyChanged("VendorName");
				this.OnVendorNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_mail", DbType="VarChar(MAX)")]
	public string E_mail
	{
		get
		{
			return this._E_mail;
		}
		set
		{
			if ((this._E_mail != value))
			{
				this.OnE_mailChanging(value);
				this.SendPropertyChanging();
				this._E_mail = value;
				this.SendPropertyChanged("E_mail");
				this.OnE_mailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(MAX)")]
	public string Logo
	{
		get
		{
			return this._Logo;
		}
		set
		{
			if ((this._Logo != value))
			{
				this.OnLogoChanging(value);
				this.SendPropertyChanging();
				this._Logo = value;
				this.SendPropertyChanged("Logo");
				this.OnLogoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoPath", DbType="VarChar(MAX)")]
	public string LogoPath
	{
		get
		{
			return this._LogoPath;
		}
		set
		{
			if ((this._LogoPath != value))
			{
				this.OnLogoPathChanging(value);
				this.SendPropertyChanging();
				this._LogoPath = value;
				this.SendPropertyChanged("LogoPath");
				this.OnLogoPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(MAX)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VendorProfileTable_HostingPlansTable", Storage="_HostingPlansTables", ThisKey="Id", OtherKey="VendorID")]
	public EntitySet<HostingPlansTable> HostingPlansTables
	{
		get
		{
			return this._HostingPlansTables;
		}
		set
		{
			this._HostingPlansTables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VendorProfileTable_HostDomainsTable", Storage="_HostDomainsTables", ThisKey="Id", OtherKey="VendorID")]
	public EntitySet<HostDomainsTable> HostDomainsTables
	{
		get
		{
			return this._HostDomainsTables;
		}
		set
		{
			this._HostDomainsTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_HostingPlansTables(HostingPlansTable entity)
	{
		this.SendPropertyChanging();
		entity.VendorProfileTable = this;
	}
	
	private void detach_HostingPlansTables(HostingPlansTable entity)
	{
		this.SendPropertyChanging();
		entity.VendorProfileTable = null;
	}
	
	private void attach_HostDomainsTables(HostDomainsTable entity)
	{
		this.SendPropertyChanging();
		entity.VendorProfileTable = this;
	}
	
	private void detach_HostDomainsTables(HostDomainsTable entity)
	{
		this.SendPropertyChanging();
		entity.VendorProfileTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeedBackTable")]
public partial class FeedBackTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _E_mail;
	
	private string _Usertype;
	
	private string _Message;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnE_mailChanging(string value);
    partial void OnE_mailChanged();
    partial void OnUsertypeChanging(string value);
    partial void OnUsertypeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
	
	public FeedBackTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_mail", DbType="VarChar(MAX)")]
	public string E_mail
	{
		get
		{
			return this._E_mail;
		}
		set
		{
			if ((this._E_mail != value))
			{
				this.OnE_mailChanging(value);
				this.SendPropertyChanging();
				this._E_mail = value;
				this.SendPropertyChanged("E_mail");
				this.OnE_mailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usertype", DbType="VarChar(MAX)")]
	public string Usertype
	{
		get
		{
			return this._Usertype;
		}
		set
		{
			if ((this._Usertype != value))
			{
				this.OnUsertypeChanging(value);
				this.SendPropertyChanging();
				this._Usertype = value;
				this.SendPropertyChanged("Usertype");
				this.OnUsertypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX)")]
	public string Message
	{
		get
		{
			return this._Message;
		}
		set
		{
			if ((this._Message != value))
			{
				this.OnMessageChanging(value);
				this.SendPropertyChanging();
				this._Message = value;
				this.SendPropertyChanged("Message");
				this.OnMessageChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HostingPlansTable")]
public partial class HostingPlansTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Platform;
	
	private System.Nullable<int> _VendorID;
	
	private string _PlanType;
	
	private string _Websites;
	
	private string _SpaceSize;
	
	private string _Email_size;
	
	private string _Ftp_size;
	
	private string _PlanPrice;
	
	private EntityRef<VendorProfileTable> _VendorProfileTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPlatformChanging(string value);
    partial void OnPlatformChanged();
    partial void OnVendorIDChanging(System.Nullable<int> value);
    partial void OnVendorIDChanged();
    partial void OnPlanTypeChanging(string value);
    partial void OnPlanTypeChanged();
    partial void OnWebsitesChanging(string value);
    partial void OnWebsitesChanged();
    partial void OnSpaceSizeChanging(string value);
    partial void OnSpaceSizeChanged();
    partial void OnEmail_sizeChanging(string value);
    partial void OnEmail_sizeChanged();
    partial void OnFtp_sizeChanging(string value);
    partial void OnFtp_sizeChanged();
    partial void OnPlanPriceChanging(string value);
    partial void OnPlanPriceChanged();
    #endregion
	
	public HostingPlansTable()
	{
		this._VendorProfileTable = default(EntityRef<VendorProfileTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="VarChar(MAX)")]
	public string Platform
	{
		get
		{
			return this._Platform;
		}
		set
		{
			if ((this._Platform != value))
			{
				this.OnPlatformChanging(value);
				this.SendPropertyChanging();
				this._Platform = value;
				this.SendPropertyChanged("Platform");
				this.OnPlatformChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="Int")]
	public System.Nullable<int> VendorID
	{
		get
		{
			return this._VendorID;
		}
		set
		{
			if ((this._VendorID != value))
			{
				if (this._VendorProfileTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVendorIDChanging(value);
				this.SendPropertyChanging();
				this._VendorID = value;
				this.SendPropertyChanged("VendorID");
				this.OnVendorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanType", DbType="VarChar(MAX)")]
	public string PlanType
	{
		get
		{
			return this._PlanType;
		}
		set
		{
			if ((this._PlanType != value))
			{
				this.OnPlanTypeChanging(value);
				this.SendPropertyChanging();
				this._PlanType = value;
				this.SendPropertyChanged("PlanType");
				this.OnPlanTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Websites", DbType="VarChar(MAX)")]
	public string Websites
	{
		get
		{
			return this._Websites;
		}
		set
		{
			if ((this._Websites != value))
			{
				this.OnWebsitesChanging(value);
				this.SendPropertyChanging();
				this._Websites = value;
				this.SendPropertyChanged("Websites");
				this.OnWebsitesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceSize", DbType="VarChar(MAX)")]
	public string SpaceSize
	{
		get
		{
			return this._SpaceSize;
		}
		set
		{
			if ((this._SpaceSize != value))
			{
				this.OnSpaceSizeChanging(value);
				this.SendPropertyChanging();
				this._SpaceSize = value;
				this.SendPropertyChanged("SpaceSize");
				this.OnSpaceSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_size", DbType="VarChar(MAX)")]
	public string Email_size
	{
		get
		{
			return this._Email_size;
		}
		set
		{
			if ((this._Email_size != value))
			{
				this.OnEmail_sizeChanging(value);
				this.SendPropertyChanging();
				this._Email_size = value;
				this.SendPropertyChanged("Email_size");
				this.OnEmail_sizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ftp_size", DbType="VarChar(MAX)")]
	public string Ftp_size
	{
		get
		{
			return this._Ftp_size;
		}
		set
		{
			if ((this._Ftp_size != value))
			{
				this.OnFtp_sizeChanging(value);
				this.SendPropertyChanging();
				this._Ftp_size = value;
				this.SendPropertyChanged("Ftp_size");
				this.OnFtp_sizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanPrice", DbType="VarChar(MAX)")]
	public string PlanPrice
	{
		get
		{
			return this._PlanPrice;
		}
		set
		{
			if ((this._PlanPrice != value))
			{
				this.OnPlanPriceChanging(value);
				this.SendPropertyChanging();
				this._PlanPrice = value;
				this.SendPropertyChanged("PlanPrice");
				this.OnPlanPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VendorProfileTable_HostingPlansTable", Storage="_VendorProfileTable", ThisKey="VendorID", OtherKey="Id", IsForeignKey=true)]
	public VendorProfileTable VendorProfileTable
	{
		get
		{
			return this._VendorProfileTable.Entity;
		}
		set
		{
			VendorProfileTable previousValue = this._VendorProfileTable.Entity;
			if (((previousValue != value) 
						|| (this._VendorProfileTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._VendorProfileTable.Entity = null;
					previousValue.HostingPlansTables.Remove(this);
				}
				this._VendorProfileTable.Entity = value;
				if ((value != null))
				{
					value.HostingPlansTables.Add(this);
					this._VendorID = value.Id;
				}
				else
				{
					this._VendorID = default(Nullable<int>);
				}
				this.SendPropertyChanged("VendorProfileTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HostDomainsTable")]
public partial class HostDomainsTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _DomainName;
	
	private string _DomainPrice;
	
	private System.Nullable<int> _VendorID;
	
	private EntityRef<VendorProfileTable> _VendorProfileTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDomainNameChanging(string value);
    partial void OnDomainNameChanged();
    partial void OnDomainPriceChanging(string value);
    partial void OnDomainPriceChanged();
    partial void OnVendorIDChanging(System.Nullable<int> value);
    partial void OnVendorIDChanged();
    #endregion
	
	public HostDomainsTable()
	{
		this._VendorProfileTable = default(EntityRef<VendorProfileTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainName", DbType="VarChar(MAX)")]
	public string DomainName
	{
		get
		{
			return this._DomainName;
		}
		set
		{
			if ((this._DomainName != value))
			{
				this.OnDomainNameChanging(value);
				this.SendPropertyChanging();
				this._DomainName = value;
				this.SendPropertyChanged("DomainName");
				this.OnDomainNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainPrice", DbType="VarChar(MAX)")]
	public string DomainPrice
	{
		get
		{
			return this._DomainPrice;
		}
		set
		{
			if ((this._DomainPrice != value))
			{
				this.OnDomainPriceChanging(value);
				this.SendPropertyChanging();
				this._DomainPrice = value;
				this.SendPropertyChanged("DomainPrice");
				this.OnDomainPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="Int")]
	public System.Nullable<int> VendorID
	{
		get
		{
			return this._VendorID;
		}
		set
		{
			if ((this._VendorID != value))
			{
				if (this._VendorProfileTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVendorIDChanging(value);
				this.SendPropertyChanging();
				this._VendorID = value;
				this.SendPropertyChanged("VendorID");
				this.OnVendorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VendorProfileTable_HostDomainsTable", Storage="_VendorProfileTable", ThisKey="VendorID", OtherKey="Id", IsForeignKey=true)]
	public VendorProfileTable VendorProfileTable
	{
		get
		{
			return this._VendorProfileTable.Entity;
		}
		set
		{
			VendorProfileTable previousValue = this._VendorProfileTable.Entity;
			if (((previousValue != value) 
						|| (this._VendorProfileTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._VendorProfileTable.Entity = null;
					previousValue.HostDomainsTables.Remove(this);
				}
				this._VendorProfileTable.Entity = value;
				if ((value != null))
				{
					value.HostDomainsTables.Add(this);
					this._VendorID = value.Id;
				}
				else
				{
					this._VendorID = default(Nullable<int>);
				}
				this.SendPropertyChanged("VendorProfileTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RateReviewTable")]
public partial class RateReviewTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _VendorID;
	
	private System.Nullable<int> _Rate;
	
	private string _Review;
	
	private System.Nullable<int> _UserId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVendorIDChanging(System.Nullable<int> value);
    partial void OnVendorIDChanged();
    partial void OnRateChanging(System.Nullable<int> value);
    partial void OnRateChanged();
    partial void OnReviewChanging(string value);
    partial void OnReviewChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    #endregion
	
	public RateReviewTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="Int")]
	public System.Nullable<int> VendorID
	{
		get
		{
			return this._VendorID;
		}
		set
		{
			if ((this._VendorID != value))
			{
				this.OnVendorIDChanging(value);
				this.SendPropertyChanging();
				this._VendorID = value;
				this.SendPropertyChanged("VendorID");
				this.OnVendorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Int")]
	public System.Nullable<int> Rate
	{
		get
		{
			return this._Rate;
		}
		set
		{
			if ((this._Rate != value))
			{
				this.OnRateChanging(value);
				this.SendPropertyChanging();
				this._Rate = value;
				this.SendPropertyChanged("Rate");
				this.OnRateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Review", DbType="VarChar(MAX)")]
	public string Review
	{
		get
		{
			return this._Review;
		}
		set
		{
			if ((this._Review != value))
			{
				this.OnReviewChanging(value);
				this.SendPropertyChanging();
				this._Review = value;
				this.SendPropertyChanged("Review");
				this.OnReviewChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VendorWebsiteTable")]
public partial class VendorWebsiteTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _VendorID;
	
	private string _url;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVendorIDChanging(System.Nullable<int> value);
    partial void OnVendorIDChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    #endregion
	
	public VendorWebsiteTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="Int")]
	public System.Nullable<int> VendorID
	{
		get
		{
			return this._VendorID;
		}
		set
		{
			if ((this._VendorID != value))
			{
				this.OnVendorIDChanging(value);
				this.SendPropertyChanging();
				this._VendorID = value;
				this.SendPropertyChanged("VendorID");
				this.OnVendorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(MAX)")]
	public string url
	{
		get
		{
			return this._url;
		}
		set
		{
			if ((this._url != value))
			{
				this.OnurlChanging(value);
				this.SendPropertyChanging();
				this._url = value;
				this.SendPropertyChanged("url");
				this.OnurlChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
